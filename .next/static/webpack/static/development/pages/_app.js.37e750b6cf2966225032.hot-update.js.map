{"version":3,"file":"static/webpack/static/development/pages/_app.js.37e750b6cf2966225032.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport { StateProvider } from '../context/state';\n\nlet initialState = {};\nlet reducer = {};\nif(process.browser === true) {\n    const jsonProducts = require('../static/stub/products.json');\n    let localState = JSON.parse(window.localStorage.getItem('appStateLocal')) || [];\n    console.dir('Initial ')\n    initialState = {\n        products: localState.products || jsonProducts,\n        cartItems: localState.cartItems || []\n    }\n    if ( !localState.products ) {\n        window.localStorage.setItem('appStateLocal', JSON.stringify(initialState));\n    }\n    reducer = (state, action) => {\n        let naviState = {};\n        switch (action.type) {\n          case 'addToCart':\n            //  IF / ELSE to find is the product already exists\n            naviState = {\n              ...state,\n              cartItems: [ ...state.cartItems, action.cartItem ]\n            }\n            break;\n          case 'clearCart':\n            naviState = {\n              ...state,\n              cartItems: []\n            }\n            break;\n          default:\n            naviState = state;\n        }\n    \n        // LocalStorage\n        window.localStorage.setItem('appStateLocal', JSON.stringify(naviState));\n        \n        // Return State object\n        return naviState;\n    };\n}\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n        <StateProvider initialState={initialState} reducer={reducer}>\n            <Container>\n                <Component {...pageProps} />\n            </Container>\n        </StateProvider>\n    );\n  }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAfA;AACA;AACA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAWA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AApBA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AATA;AACA;AAuBA;;;;A","sourceRoot":""}